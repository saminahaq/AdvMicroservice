
server.port = 8082

#spring.datasource.name=schooldb
#spring.datasource.url=jdbc:mysql://localhost:3306/schooldb?serverTimeZone=UTC
#spring.datasource.username=root
#spring.datasource.password=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
##spring.datasource.driver-class-name =com.mysql.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql: true



spring.datasource.url=jdbc:mysql://localhost:3306/schooldb?serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=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
spring.jpa.hibernate.ddl-auto=create-drop //running after the first time (when the tables are created in the database) or later when you want the data remain for later tests you have to change the key word 'create-drop' to 'update' so that the data remains in place. Oops! the database itself without the tables needs to be created manually first.
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.logging.level.org.hibernate.SQL=debug
spring.jpa.show-sql=true

## DataSource settings: set here your own configurations for the database 
## connection. In this example we have "netgloo_blog" as database name and 
## "root" as username and password.
#spring.datasource.url = jdbc:mysql://localhost:3306/schooldb
#spring.datasource.username = root
#spring.datasource.password = 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
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1
#
## Show or not log for each sql query
#spring.jpa.show-sql = true
#
## Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update
#
## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#
## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager)
#
## The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect