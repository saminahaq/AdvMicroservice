Spring JPA [Ready Application]


JPA spring is object based programming and database has the tables not objects 
so we need to map particular class to particular tables.

Traditional Approach:
so through tables we are getting all record and converted into the  objects, but
now we don't need to do this conversion manually 
and we have different framework that do this functionality called is ORM 


ORM [Object relationship mapping ]
so tables represent the object in ORM, so hibernate and iBAt framework defined these functionality 


Hiberante FrameWork:

hibernate has it's own implementation of ORM, 
hiberante different functionality and session and object are behaving and interaction as compare to the iBAT.
so conversion between hiberanate and iBAT is very difficult so java provide the JPS specification 


JPS API specification: [JPS "Java persistance API Specificaion"][using to change the ORM framework from Hibernate to Ibat vice versa]
 
java created the standard specification e.g JPS specification 
so this specification used when creating the implementation 
so java provide the specification and we need to create the implementation
JPS specification through the ORM provider 

so through the JPSAPI we can convert the iBAT and Hibernate easily, so need to implement the JPS API specification

so in our application POM.XML used [spring-boot-starter-data-jpa] that used hibernate
Spring using Hibernate framework for the ORM

**************************************** Connecting SpringBoot app with DB **********************************************

So don't go to the database to create table,

for dev used but not in prod : spring.jpa.hibernate.ddl-auto=update

FirstStep : setup the yml for the database connection 
second step : create thePOJO and run application to create table at database 


**************************************** Mapping entities with DB **********************************************




************************************************** Different JPA Annotations ********************************************************





************************************************** Understanding repositories and methods ********************************************************









************************************************** @Embeddable and @Embedded ********************************************************









************************************************** Native Queries Example ********************************************************







************************************************** Query Named Params ********************************************************





************************************************** @Transactional & @Modifying Annotation ********************************************************










************************************************** JPA One to One Relationship ********************************************************


************************************************** Fetch Types ********************************************************

************************************************** Uni & Bi directional Relationship ********************************************************
************************************************** JPA One to Many Relationship ********************************************************
************************************************** JPA Many to One Relationship ********************************************************

************************************************** Paging and Sorting ********************************************************

************************************************** JPA Many to Many Relationship ********************************************************







